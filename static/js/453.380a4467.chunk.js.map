{"version":3,"file":"static/js/453.380a4467.chunk.js","mappings":"kNACA,EAA2B,+BAA3B,EAAuE,iCAAvE,EAAsH,kCAAtH,EAA4K,wCAA5K,EAAiO,iCAAjO,EAA+Q,iCAA/Q,EAA4T,gCAA5T,EAAmW,2BAAnW,EAAuY,6BAAvY,EAA8a,8B,oECUjaA,EAAe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,SAM/CC,GAAWC,EAAAA,EAAAA,MACXC,EAAe,WAGjBC,QAAQC,IAAIN,GACZE,GAASK,EAAAA,EAAAA,GAAaP,GAWzB,EACD,OACI,iBAAKQ,UAAWC,EAAhB,WAEM,gBAAKD,UAAWC,EAAUC,I,y+BAAWC,IAAI,eAC3C,gBAAKH,UAAWC,EAAeC,IAAKE,EAAQD,IAAI,eAClD,gBAAKH,UAAWC,KAClB,gBAAKD,UAAWC,EAAYC,IAAKG,EAAKF,IAAI,eACtC,iBAAKH,UAAWC,EAAhB,WACI,eAAGD,UAAWC,EAAd,UAA+BX,EAA/B,cACA,eAAGU,UAAWC,EAAd,UAA+BV,EAA/B,gBAEAE,GAAW,mBAAQO,UAAWC,EAAuBK,KAAK,SAASC,QAASX,EAAjE,wBAAkG,mBAAQI,UAAWC,EAAiBK,KAAK,SAASC,QAASX,EAA3D,yBAK5H,EClDYY,EAAa,SAACC,GAAD,OAAWA,EAAMC,IAAjB,EACbC,EAAkB,SAACF,GAAD,OAAWA,EAAMG,SAAjB,ECA/B,EAA2B,6BAA3B,EAAqE,+BAArE,EAAwH,sCCAxH,EAA6B,+B,2BCMhBC,EAAa,WACtB,IAAQC,GAAUC,EAAAA,EAAAA,IAAaP,GAAvBM,MACDE,GAAcD,EAAAA,EAAAA,IAAYJ,GAA1BK,YACDtB,GAAWC,EAAAA,EAAAA,MAOjB,OACI,mBAAQK,UAAWC,EAAgBK,KAAK,SAASC,QAP/B,WAClB,GAAIO,EAAMG,QAAUD,EAChB,OAAOE,IAAAA,OAAAA,QAAwB,8BAEnCxB,GAASyB,EAAAA,EAAAA,MACZ,EAEG,sBAEP,ECdYC,EAAa,WACxB,IAAQN,GAAUC,EAAAA,EAAAA,IAAYP,GAAtBM,MAEN,OACI,iCACI,eAAId,UAAWC,EAAf,qBACA,eAAID,UAAWC,EAAf,SACLa,GACCA,EAAMO,KAAI,SAAAC,GAER,OACE,eAAItB,UAAWC,EAAf,UACE,SAACZ,EAAD,CACEC,OAAQgC,EAAKhC,OACbC,UAAW+B,EAAK/B,UAChBC,QAAS8B,EAAKC,GACd9B,SAAU6B,EAAK7B,YALiB6B,EAAKC,GAS5C,OAED,SAACV,EAAD,MAGP,E,SCbD,EAXmB,WACjB,IAAMnB,GAAWC,EAAAA,EAAAA,MACTmB,GAAUC,EAAAA,EAAAA,IAAYP,GAAtBM,MACAU,GAAeT,EAAAA,EAAAA,IAAYJ,GAA3Ba,WAMR,OAJAC,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,GAAYF,GACtB,GAAE,CAAC9B,EAAU8B,KAEP,8BAAGV,EAAMG,OAAS,IAAK,SAACG,EAAD,KAC/B,C","sources":["webpack://react-homework-template/./src/components/TweetElement/TweetElement.module.css?e2da","components/TweetElement/TweetElement.jsx","redux/selectors.js","webpack://react-homework-template/./src/components/TweetsList/TweetsList.module.css?2ae8","webpack://react-homework-template/./src/components/ButtonLoad/ButtonLoad.module.css?eb19","components/ButtonLoad/ButtonLoad.jsx","components/TweetsList/TweetsList.jsx","pages/TweetsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tweetBox\":\"TweetElement_tweetBox__XtQgZ\",\"mediumLine\":\"TweetElement_mediumLine__PrWll\",\"tweetButton\":\"TweetElement_tweetButton__6EbJO\",\"tweetButtonActive\":\"TweetElement_tweetButtonActive__CvG6P\",\"tweetsInfo\":\"TweetElement_tweetsInfo__N2sts\",\"followInfo\":\"TweetElement_followInfo__0YZHe\",\"backImage\":\"TweetElement_backImage__gMNtg\",\"logo\":\"TweetElement_logo__Fz8Sw\",\"avatar\":\"TweetElement_avatar__DDEwi\",\"descBox\":\"TweetElement_descBox__NpU+A\"};","import PropTypes from 'prop-types';\n// import { useSelector } from 'react-redux';\n// import { selectAuth } from '../../redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { activeButton } from '../../redux/auth/authSlice';\nimport css from './TweetElement.module.css'\nimport design from '../../images/design.png'\nimport boy from '../../images/boy.png'\nimport logo from '../../images/logo.png'\n// import { useState } from 'react';\n\nexport const TweetElement = ({ tweets, followers,idTweet,isActive}) => {\n    // const {items} = useSelector(selectAuth)\n    // const [isActive,setIsActive]=useState(false)\n    // console.log(isActive)\n    // const {items}=useSelector(selectAuth)\n    // console.log(idTweet)\n    const dispatch = useDispatch()\n    const handleButton = () => {\n        // items.map()\n   \n        console.log(idTweet)\n        dispatch(activeButton(idTweet))\n      // console.log(isActive)\n      // if (isActive) { followers += 1 }\n      // else\n      // {\n      //   followers-=1\n      // }\n        // console.log(activeButton)\n      // items.map((item) => { if (item.id === idTweet) { return setIsActive(isActive => !isActive) }  })\n      //   setIsActive(isActive => !isActive)\n      //   console.log(isActive)\n    }\n    return (\n        <div className={css.tweetBox}>\n            {/* <svg className={css.logo} src={logo} width='76' height='22'>Logo</svg> */}\n              <img className={css.logo} src={logo} alt=\"backImage\" />\n            <img className={css.backImage} src={design} alt=\"backImage\"  />\n          <div className={css.mediumLine}/>\n        <img className={css.avatar} src={boy} alt=\"backImage\" />\n            <div className={css.descBox}>\n                <p className={css.tweetsInfo}>{tweets } TWEETS</p>\n                <p className={css.followInfo}>{followers} FOLLOWERS</p>\n                {/* <button className={css.tweetButton} type=\"button\" onClick={() =>dispatch(activeButton())}>Follow</button> */}\n               {isActive?  <button className={css.tweetButtonActive} type=\"button\" onClick={handleButton}>Following</button>:<button className={css.tweetButton} type=\"button\" onClick={handleButton}>Follow</button>}\n                </div>\n        \n        </div>\n    )\n}\n\nTweetElement.propTypes = {\n  \n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n};","export const selectAuth = (state) => state.auth;\nexport const selectTweetCard = (state) => state.tweetCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemList\":\"TweetsList_itemList__b7oKl\",\"tweetsItem\":\"TweetsList_tweetsItem__HHZhO\",\"mainTweetsHeading\":\"TweetsList_mainTweetsHeading__+aNL7\"};","// extracted by mini-css-extract-plugin\nexport default {\"buttonLoad\":\"ButtonLoad_buttonLoad__bcZww\"};","import css from './ButtonLoad.module.css'\nimport Notiflix from 'notiflix'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { selectAuth , selectTweetCard} from '../../redux/selectors'\nimport { addPage } from '../../redux/tweetCard/tweetCardSlice'\n\nexport const ButtonLoad = () => {\n    const { items } = useSelector( selectAuth)\n    const {totalAmount} =useSelector(selectTweetCard)\n    const dispatch = useDispatch()\n    const addNumberPage = () => {\n        if (items.length >= totalAmount) {\n            return Notiflix.Notify.failure(\"You don't have more tweets\");\n        }\n        dispatch(addPage())\n    }\n    return (\n        <button className={css.buttonLoad} type='button' onClick={addNumberPage} >Load More</button>\n    )\n}","import { TweetElement } from \"../TweetElement/TweetElement\"\nimport { useSelector } from \"react-redux\";\nimport { selectAuth } from \"../../redux/selectors\";\nimport css from './TweetsList.module.css'\nimport { ButtonLoad } from \"../ButtonLoad/ButtonLoad\";\n\nexport const TweetsList = () => {\n  const { items } = useSelector(selectAuth)\n  // console.log(items)\n    return (\n        <>\n            <h2 className={css.mainTweetsHeading}>Tweets</h2>\n            <ul className={css.itemList}>\n      {items &&\n        items.map(item => {\n           \n          return (\n            <li className={css.tweetsItem} key={item.id}>\n              <TweetElement\n                tweets={item.tweets}\n                followers={item.followers}\n                idTweet={item.id}\n                isActive={item.isActive}\n              />\n            </li>\n          );\n        })}\n        </ul>\n        <ButtonLoad/>\n            </>\n    )\n}","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { TweetsList } from \"../components/TweetsList/TweetsList\";\nimport { fetchTweets } from \"../redux/auth/authOperations\";\nimport { useSelector } from \"react-redux\";\nimport { selectAuth, selectTweetCard } from \"../redux/selectors\";\n\nconst TweetsPage = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectAuth);\n  const { numberPage } = useSelector(selectTweetCard);\n\n  useEffect(() => {\n    dispatch(fetchTweets(numberPage));\n  }, [dispatch, numberPage]);\n\n  return <>{items.length > 0 && <TweetsList />}</>;\n};\nexport default TweetsPage;\n"],"names":["TweetElement","tweets","followers","idTweet","isActive","dispatch","useDispatch","handleButton","console","log","activeButton","className","css","src","alt","design","boy","type","onClick","selectAuth","state","auth","selectTweetCard","tweetCard","ButtonLoad","items","useSelector","totalAmount","length","Notiflix","addPage","TweetsList","map","item","id","numberPage","useEffect","fetchTweets"],"sourceRoot":""}